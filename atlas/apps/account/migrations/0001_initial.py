# Generated by Django 2.1.7 on 2019-03-01 12:29

import atlas.apps.account.managers
import atlas.apps.account.utils
import atlas.common.core.validators
import autoslug.fields
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=256)),
                ('last_name', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name', sep='', slugify=atlas.apps.account.utils.slugify_username, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[atlas.common.core.validators.PhoneRegex()])),
                ('profile_pic_url', models.URLField(blank=True, null=True, verbose_name='Profile Picture')),
                ('ui_sso_username', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='SSO UI username')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', atlas.apps.account.managers.UserManager()),
            ],
        ),
    ]
