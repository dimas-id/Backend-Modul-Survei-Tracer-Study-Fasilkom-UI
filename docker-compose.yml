version: "3.6"

services:
  db:
    image: postgres:10.7-alpine
    container_name: b3_atlas_db
    volumes:
      - b3-atlas-postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      private:
    restart: always
  redis:
    image: redis:5.0.4
    container_name: b3_atlas_redis
    command: redis-server --appendonly yes
    volumes:
      - b3-atlas-redis_data:/data
    networks:
      private:
    restart: always
  migration:
    build: .
    image: b3_atlas/web
    container_name: b3_atlas_migration
    environment:
      ROOT_URI: ${ROOT_URI}
      HELIOS_URI: ${HELIOS_URI}
      HYPERION_URI: ${HYPERION_URI}
      DJANGO_ENV: ${DJANGO_ENV}
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DB_NAME: ${DB_NAME}
      DB_POSTGRES_USER: ${DB_POSTGRES_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      REDIS_DEFAULT_TIMEOUT: ${REDIS_DEFAULT_TIMEOUT}
      CSUI_USERNAME: ${CSUI_USERNAME}
      CSUI_PASSWORD: ${CSUI_PASSWORD}
      LINKEDIN_CLIENT_ID: ${LINKEDIN_CLIENT_ID}
      LINKEDIN_CLIENT_SECRET: ${LINKEDIN_CLIENT_SECRET}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput && python manage.py compilemessages"
    networks:
      private:
    restart: on-failure
    depends_on:
      - db
      - redis
  rqworker:
    image: b3_atlas/web
    container_name: b3_atlas_rqworker
    command: python /app/manage.py rqworker
    networks:
      private:
    restart: always
    depends_on:
      - migration
  web:
    image: b3_atlas/web
    container_name: b3_atlas_web
    ports:
      - 8000:8000
    command: bash -c "cd /app && gunicorn atlas.wsgi:application --bind 0.0.0.0:8000 --error-logfile error.log"
    networks:
      private:
      public:
    restart: always
    depends_on:
      - rqworker


volumes:
  b3-atlas-postgres_data:
  b3-atlas-redis_data:

networks:
  private:
    external:
      name: b3-${DJANGO_ENV}-private
  public:
    external:
      name: b3-${DJANGO_ENV}-public
