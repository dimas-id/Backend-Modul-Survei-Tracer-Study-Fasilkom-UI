version: '3'

services:
  webservice:
    image: b3_atlas/webservice
    command: ./entrypoint.sh
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./mediafiles:/app/mediafiles
      - .:/app

    expose:
      - 8000
    env_file: .env
    depends_on:
      - db
      - redis
      - elastic
    restart: always
  rqworker:
    image: b3_atlas/webservice
    command: python manage.py rqworker
    depends_on:
      - redis
      - webservice
    volumes:
      - .:/app
    restart: always
      
  redis:
    image: redis:5.0.7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - default
    restart: always
  db:
    image: postgres:11.6-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks: 
      - default
    env_file: .env.db
    restart: always
  nginx:
    build: ./nginx
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./mediafiles:/app/mediafiles
    ports:
      - 8000:80
    depends_on:
      - webservice
    restart: always
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    restart: always
  cron:
    build: ./atlas/scripts/
    command: ["crond","-f"]
    volumes:
      - .:/app
volumes:
  redis_data:
  postgres_data:
  esdata:
